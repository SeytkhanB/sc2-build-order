import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { trpc } from "../../../../../utils/trpc";

const Finall: NextPage = () => {
  const { opponentRace, raceName } = useRouter().query as {
    opponentRace: string;
    raceName: string;
  };

  const builds = trpc.builds.getBuildsByMatchUp.useQuery({
    matchUp: `${raceName?.toLowerCase().charAt(0)}v${opponentRace
      ?.toLowerCase()
      .charAt(0)}`,
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/sc2.png" />
      </Head>
      <main
        className="flex min-h-screen 
        flex-col items-center justify-center gap-4 bg-gradient-to-b 
        from-[#2e026d] to-[#15162c] text-white"
      >
        <h2>
          {raceName} vs {opponentRace}
        </h2>

        <table>
          <thead>
            <tr>
              <th>Id</th>
              <th>Match Up</th>
              <th>Build</th>
            </tr>
          </thead>

          <tbody>
            {builds.data?.map((build: any) => (
              <tr key={build.id}>
                <td>{build.id}</td>
                <td>{build.matchUp}</td>
                <td>{build.build}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </main>
    </>
  );
};

export default Finall;
